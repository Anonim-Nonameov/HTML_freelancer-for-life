/* Урок №2 - CSS стили шрифта и текста. */	
		
/* 
В CSS существует много различных свойств для задания стилей шрифта и текста.
В этом уроке мы рассмотрим самые популярные и часто используемые свойства. Ну, погнали!
*/

/* font-family: ...; - семейство шрифта */

/*
Свойство font-family отвечает за шрифт текста. Если мы укажем определенный шрифт, например "Arial", то
он применится к тексту.	По умолчанию, у текста в любом браузере установлен шрифт "Times New Roman",
и если мы создадим какой нибудь параграф - у него будет именно этот шрифт.
Значение у font-family пишется как с кавычками, так и без них.
С кавычками - если у нашего параграфа название шрифта состоит из 2+ слов.
И на последок - значений у font-family может быть много, 3 или 4, а может и 5.
Это сделано для того, чтобы если у пользователя не было такого-то шрифта - использовался второй,
нет втророго?

Ну а я тем временем создал параграф с классом arial, к нему то и применим font-family.
*/

.arial {
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif; 
}

/* font-size: ...; - размер шрифта */

/*
Ну, с этим свойством мы уже знакомы. Он определяет размер шрифта.
Значение задают в пикслеях, но можно задавать и в процентах. Вообще, и пиксели и проценты - не
единственные единицы измерения в CSS, есть и другие. Но о них можно подробней узнать в гугле. 
*/

.fontsize30 {
	font-size: 30px;
}

/* font-style: ...; - начертание шрифта */

/*
Свойство font-style определяет, каким будет начертание шрифта - обычным, курсивным или жирным.
Принимает 4 значения:

normal - нормальный текст (знач. по умол.)
italic - делает текст курсивным
obliue - делает текст наклонным
inherit - наследует стиль начертания шрифта (например, если у род. элемента стиль начертания italic, то будет italic)

P.S - oblique почти ничем не отличается от italic визуально, но это два абсолютно разных значения.
oblique лишь имитирует стиль рукописного ввода, наклоняя буквы чуть вправо.
*/

.italic {
	font-style: italic;
}

/* font-weight: ...; - насыщенность шрифта */

/*
Свойство font-weight устанавливает насыщенность шрифта, т.е определяет, будет шрифт тонким или жирным.
Значения у него самые разные:

normal нормальное начертание (знач. по умол.)
От 100 до 700 (100 - самое "тонкое" начертание, 700 - самое жирное)
bold - жирное начертание (то же, что и 700)
bolder - еще жирнее (относительно родителя)
lighter - еще тоньше (относительно родителя)
inherit - наследует насыщенность шрифта
*/

.font700 {
	font-weight: 700;
}

/* color: #......; - цвет текста */

/*
Со свойством color мы уже знакомы, оно устанавливает цвет текста.
Оно устанавливает цвет текста, и принимает цвет в виде: 

1. Слова (например red)
2. В формате rgb (rgb(255, 0, 0))
3. В шестнадцатеричном формате (#F00F00, #FF0000)
*/

.colorred {
	color: #FF0000;
}

/* text-align: ...; - выравнивание текста по... */

/*
Свойство text-align выравнивает текст горизонтально.
Его значения:

1. Выровнить по центру - значение "center"
2. Выровнить по левому краю - значение "left" (знач. по умол.)
3. Выровнить по правому краю - значение "right"
4. Выровнить по всей ширине экрана - значение "justify"
5. Выроовнить также, как и родителя - значение "inherit"
*/

.textright {
	text-align: right;
}

/* text-decoration: ...; - текстовые декорации (подчеркивание, перечеркивание) */

/*
Свойство text-decoration в основном используется для подчеркивания, перечеркивания, надчеркивания и т.д.
Его значения:

1. none - удаляет все декорации (знач. по умол.)
2. underline - добавляет нижнее подчеркивание (знач. по умол. у ссылок)
3. overline - добавляет верхнее подчеркивание
4. line-through - зачеркивает текст
*/

.decoration {
	text-decoration: line-through;
}

/* text-shadow: ... ... ... #...... ; - тень текста */

/*
Свойство text-shadow добавляет тень тексту.
Его значение состоит из 3 чисел (в пикселях или любой другой ед. измерения) и кода в шест. формате.
Те самые 3 числа, это:

1. - смещение по горизонтали
2. - смещение по вертикали
3. - размер размытия тени
*/

.shadow {
	text-shadow: 1px 1px 10px #000000;
}

/* text-transform: ...; - управление регистром текста */

/*
Свойство text-transform отвечает за регистр текста - ОН БУДЕТ НАПИСАН ЗАГЛАВНЫМИ БУКВАМИ, или прописными.
Его значения:

1. none - весь текст будет отображаться нормально (знач. по умол.)
2. uppercase - ВЕСЬ ТЕКСТ БУДЕТ НАПИСАН ЗАГЛАВНЫМИ БУКВАМИ
3. capitalize - Каждое Первое Слово В Тексте Будет Начинаться С Заглавной Буквы
4. lowercase - весь текст будет написан строчными буквами
*/

.uppercase {
	text-transform: uppercase;
}

/* text-indent: ...; - создание "красной строки" */

/*
Свойство text-indent добавляет отступ первой строке в тексте, создавая таким образом "красную" строку.
Значения:

Любое значение в px (или любой другой ед. измерения)
*/

.indent {
	text-indent: 50px;
}

/* letter-spacing: ...; - создание интервала между символами */

/*
Свойство letter-spacing создает интервалы, промежутки между буквами в тексте.
Значения:

Любое значыение в px (или любой другой ед. измерения)
*/

.lspace {
	letter-spacing: 5px;
}

/* word-spacing: ...; - создание интервала между словами */

/*
Свойство word-spacing создает интервалы, промежутки между словами в тексте (т.е, это то же самое
что и letter-spacing, но интервалы между буквами а не словами)
Значения:

Любое значеение в px (или любой другой ед. измерения)
*/

.wspace {
	word-spacing: 5px;
}

/* white-space: ...; - управление пробелами в тексте */

/*
Свойство white-space управляет пробелами между словами в тексте. Если захотим, можем сделать так, что даже
если текст будет огромный - он не перенесется на след. строку.
Значения:

1. normal - текст в окне браузера переносится автоматически (знач. по умол.)
2. nowrap - пробелы не учитываются, переносы строк в коде игнорируются, весь текст отображается одной строкой
Вместе с тем, добавление тега br всё же переносит текст на новую строку
3. pre - текст показывается с учетом ВСЕХ пробелов и переносов строк, как они были добавлены в коде HTML
4. pre-line - в тексте пробелы не учитываются, текст автоматом переносится на след. строку, если он не поместился
5. pre-wrap - в тексте сохраняются все пробелы и переносы, но если строка не помеситалась по ширине - будет перенос
6. inherit - наследует значение родителя 
*/

.whitespace {
	white-space: nowrap;
}

/* line-height: ...; - высота строки */

/*
Свойство line-height отвечает за высоту каждой строки в тексте, т.е - за расстояние между строками.
Значения:

Опять же - задается в любой ед. измерения (в основном px), но его также задают и без ед. измерений.
Т.е - можно написать так: line-height: 5;

P.S - У нас в стилевом файле "обнуления" line-height равен 1.
*/

.lineheight {
	line-height: 20px;
}

/* А на этом всё :) Задача из урока - в папке "Задания"!  */