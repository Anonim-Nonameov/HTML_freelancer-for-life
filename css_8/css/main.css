/* Урок №4 - CSS позиционирование. */

/*
Сегодня мы поговорим о позиционировании! позиционирование очень часто используется при верстке
современных макетов: это и различные выпадающие меню, и всплывающие окна (так называемые поп-апы),
это и "липкий" хедер который следует за нами при скролле, и всяческое нестандартное расположение
элементов на странице. Но пользоваться всеми этими крутыми возможностями нужно очень грамотно -
этому мы в скором времени и научимся! но сначала мы немного стилизуем наш index.html файлик, чтобы
он не казался таким "сероватым":
*/

body {
    padding: 30px;
    font-family: "Arial", Helvetica, sans-serif;
}

.block {
    border: 5px solid red;
    max-width: 800px;
    height: 800px;
    margin: 0px auto;
}

.block div {
    font-size: 18px;
    font-weight: 700px;
    text-align: center;
    line-height: 50px;
}

.block__1 {
    background-color: #ece89d;
}
.block__2 {
    color: #fff;
    background-color: #5e5373;
}
.block__3 {
    background-color: #18b5a4;
}

/*
Итак, начнем! первое, основное свойство позиционирования так и называется - position, а его
значение по умолчанию - static. Вообще, свойство position устанавливает ТИП позиционирования
элемента относительно других элементов, либо окна браузера. При значении по умолчанию (static),
все наши блоки будут выводиться как обычно, на них не будет дополнительных свойств. То есть,
position: static; указано уже заранее У ВСЕХ элементов на странице, а это значит, что дублировать
его не надо. А мы идем дальше!

Следующее значение свойства position - relative. Положение у элемента устанавливается ОТНОСИТЕЛЬНО
(запомните это слово) его начального положения. Что это значит? сейчас узнаем! - свойство position
со значением relative может использоваться дополнительно с новыми свойствами позиционирования,
которые становятся доступными после того, как мы сменили значение position'а с "по умол." на
любое другое (ну вот relative, например):

left, top, right, bottom


Используя свойство position со значением relative и доп. свойства позиционирования (left, top и т.д)
мы можем сдвигать наш элемент либо по гориз., либо по верт. ОТНОСИТЕЛЬНО его текущего положения.
Например, наш второй блок. Я хочу сдвинуть его слева на 50px и от верха на 60px:

*/

.block__2 {
    position: relative;
    left: 50px;
    top: 60px;
}

/*
Заходим в браузер, смотрим - сразу становится видно, что наш блок-2 сдвинулся относительно своего
изначального положения. Вместо себя он оставил пустое место, размером которое он занимал ДО того,
как его "заставили" подвинуться (:D). С остальными блоками ничего не произошло, как стояли на
своих местах так и стоят, никто и ничто им не мешало и не мешает. Правда, есть одно но - блок-3
был "накрыт" блоком-2 ввиду того, что последний сдвинулся. Бывает всякое в жизни, такое тоже :)
Еще следует отметить, что НЕЛЬЗЯ использовать свойства left и right одновременно, произойдет..
ну, диссонанс так сказать. А ведь логично - как сдвинуть элемент сразу и справа и слева? так
не правильно и делать так не стоит, абсолютно. А мы продолжаем. Вместе с position: relative; мы
можем использовать еще одно доп. свойство - ...

Какое? узнаем позже!)
*/