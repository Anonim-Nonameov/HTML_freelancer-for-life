/* Общие стили страницы */
body {
	margin: 0px 5px;
	padding: 0px 5px;
}

* {
	box-sizing: border-box;
}

/*
Синтаксис в CSS доволно простой, мы обращаемся к конкретному тегу либо
к группе тегов в нашем index.html файле и задаем им нужные стили, "разукрашиваем торт".

Синтаксис таков:
тег {
	параметр: значение;
}

Мы выбираем тег, прописываем к нему параметр, а к параметру значение.
И это всё применится ко всем тегам, который мы прописали.

Пример -

div {
	параметр: значение;
	параметр: значение;
	параметр: значение;
}

Этот код можно прочитать так:
"Выбери все теги div в HTML файле и добавь к ним вот такие вот параметры".

Важно знать!
После параметра ОБЯЗАТЕЛЬНО идет двоеточие, а после значения точка-запятая, ею мы разделяем параметры.
Причем параметров может быть сколь угодно, 2, 3, 5 или 10.

*/

/*
span {
	font-size: 20px;
	 Изменит размер шрифта внутри тега span 

	color: red;
	 Изменит цвет текста внутри тега span 
}
*/

/* 
Этот код изменит размер шрифта на 20 пикселей и цвет
текста на красный во всех тегах span на HTML странице..
По крайней мере должен.

Наш index.html файл не видит эти стили, потому что main.css не подключен к нему!
В index.html тебе все подробно расскажут, не переживай.
А теперь быстро перейди в файл index.html и загляни в тег head!
Как всё закончишь, приди сюда обратно.
*/

/*
Так.. раз ты сюда вернулся, значит всё закончил, так?
Ага, ну вот и славно, теперь когда ты знаешь всё о классах - мы продолжим урок.
Для начала закомментируем старые стили.

Чтобы мы обратились к селектору по классу - пропишем то же самое, только вместо слова "span" -
напишем название класса:
*/

/* .bigred {
	color: red;
	font-size: 20px;
} */

/*
Всё, теперь эти стили применятся только к тем тегам, у которых есть класс bigred.

И кстати, очень удобное свойство CSS - перезаписывание стилей. Если мы, например,
после font-size: 20px; напишем ещё одно такое свойство, но только с 30 px - 
оно перезапишет то, что было до него. Т.е - размер шрифта изменится с 20 на 30 px.
Ну а если мы наоборот, поставим это свойство выше - размер будет не 30 а 20 пикселей.

То же самое можно сделать с дублированием класса - замесь переписывания стиля мы просто
возьмем и перезапишем весь наш вызов к классу -
*/

/* .bigred {
	font-size: 22x;
} */

/*
Теперь наши теги с классом bigred - размером в 22 пикселей.
В CSS есть такая мощная штука.. приоритетность!
Если мы хотим, чтобы какие-то стили применялись только к тегу span - записываем вот так:
*/

/* span.bigred {
	font-size: 25px;
	color: green;
} */

/*
И эта запись намного приоритетнее записи с простым тегом или классом.
Т.е - если мы поставим эту запись в самое-самое начало, она всё равно будет работать.

А теперь закомментируем всё не нужное и спустим всё вниз, чтоб было чище и понятнее.
Тоже самое сделаем и с index.html страницей.
Примечание - я в коде буду оставлять такие записи - U. Они означают, что я обновлял код и
удалил/закомментировал некоторые стили.
*/

/* U */

/*
.bigred {
	color: red;
	font-size: 20px;
}
*/

/*
Допустим, мы хотим чтобы теги span в теге p были зелеными.
Но как это сделать?
Легко:
*/

/* U */

/*
.bigred span {
	color: green;
}
*/

/*
Что означает наша запись?
Она означает, что стили применятся только к тегу span в теге с классом bigred.
*/

/*
Если ты смотрел на наш index.html файл, ты наверняка знаешь что я удалил класс bigred,
добавил теги div и к главному класс block.

В CSS есть такая штука как дочерние элементы и потомки.. (допишу позже)
*/

.block > p {

}