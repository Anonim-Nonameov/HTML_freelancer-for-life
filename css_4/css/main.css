/* Урок №4 - CSS свойства и стили оформления блоков. opacity и многое другое. */

/*
Итак, в прошлом уроке мы узнали и изучили свойства margin и padding, width(min-max) и height(min-max), а также
узнали как изменять стиль отображения различных тегов при помощи свойства display.
В этом уроке мы изучим свойства для оформления блоков, т.е - научимся делать наши блоки "красивыми" :)

P.S - но перед уроком следует задать стили для увеличения текста, чтобы не увеличивать масштаб страницы, ибо тогда мне
пришлось увеличивать масштаб страницы от 150% до 250%.

P.S.S - в этом уроке мы не будем рассматривать свойство background, так как его изучение требует некоторых усилий
и для этого был сделан отдельный урок, который я скоро буду смотреть (он вроде как идет сразу после этого).
*/

.example-block {
	font-size: 40px;
	margin: 0 0 30px 0;
}

.example-string {
	font-size: 40px;
}

/*
Отлично! текст стал довольно таки большим, и мы можем приступать к самому уроку. Первое свойство, которое мы
изучим - border.
С ним мы уже немного знакомы - оно устанавливает маленькую границу вокруг элемента, а также позволяет регулировать
её толщину, цвет и стиль. В это свойство задается 3 значения: первое отвечает за ширину (толщину) границы,
второе отвечает за стиль границы (по умол. стоит solid - cплошная), третье - отвечает за цвет границы (по умол. черный).
Краткая и полная запись этого свойства выглядит так - border: 1px solid #000; (с плагином emmet в редакторе Sublime Text
достаточно ввести слово "bd" и нажать "Tab", выйдет такая же запись свойства border).
Можно еще сделать так, чтобы граница была только снизу, или наоборот - сверху, но обо всём этом позже.
Мы будем потихоньку разбирать каждое значение свойства, так что не куда торопиться :)
А пока что давайте испробуем старое-новое свойство! -
*/

.example-block {
	border: 1px solid #000;
}

/*
Заходим в браузер и видим, что у нашего блока появилась граница вокруг.
Но мы можем сделать нашу границу ТОЛЩЕ, для этого меняем значение "1px" на большее - к примеру 10:
*/

.example-block {
	border: 10px solid #000;
}

/*
Заходим в браузер (опять) и видим, что у нашего блока (а точнее у его границы) изменилась толщина!
Сейчас она равна 10 пикселям, а не 1, как было задано выше. А тем временем мы идем ко следующему значению,
которое отвечает за стиль границы. По умолчанию стоит значение "solid", что значит "сплошная" - и правда, граница
у элемента полностью сплошная и не имеет в себе "дырок". Но мы можем поставить другое, полностью противоположное
значение - "dotted". Как перевести это слово я не знаю, но если мы его поставим, то граница будет пунктирной, а не
сплошной как обычно. Давайте посмотрим:
*/

.example-block {
	border: 10px dotted #000;
}

/*
(начало пропустим)... и увидели, что наша граница стала пунктирной. Красиво, но мало кому такое понравится, поэтому
идем дальше, к следующему значению - dashed. Оно очень похоже на "dotted", но вместо точек (пунктиров) мы увидим
что-то вроде "тире" (знак "-"), только длиннее и толще (из-за значения "10px"). Давайте посмотрим на него:
*/

.example-block {
	border: 10px dashed #000;
}

/*
...и увидели, что наша граница стала.. даже не знаю как это описать :D вообщем, зайдите и посмотрите сами.

А теперь применим это свойство к строчному тегу и посмотрим, что же изменится а что нет:
*/

.example-string {
	border: 10px dashed #000;
}

/*
А изменилось у нас... всё. Буквально всё. У меня будто кровь из глаз пошла.. это ужас какой-то. Каждый символ
в строчном теге окружен границой, и это выглядит кошмарно. НО, это свойство может работать также и с картинками:
*/

.example-string {
	border: 0; /* уберу весь этот кошмар, не обращать внимания... */
}

.example-image {
	border: 10px dashed #000;
}

/*
...и увидели, что всё прекрасно работает! Картинка окружена границей, созданной из "тире" (не знаю как еще
это назвать), при этом на span'ах такое не работает.
Мы можем менять значения у свойства border как хотим, с изображением всё будет нормально:
*/

.example-image {
	border: 5px dotted; #000;
}

/*
Вообще, многие свойства которые не работают для простых строчных тегов работают для изображений.. странно.

Кстати, в прошлом уроке я вроде как упоминал, что граница влияет на содержимое блока.
А именно, на что он влияет - контент смещается, отступает внутрь согласно толщине границы,
то есть - если у нашего элемента граница равна 10px, то контент сместится слева и справа на 10 пикселей.
А теперь о том, как задавать границу конкретной стороне элемента (сверху, слева и т.д), и для этого
в CSS для этого используют следующие короткие свойства:

1. - border-top: ... ... ... ; - создает границу сверху 
2. - border-right: ... ... ...; - создает границу справа
3. - border-bottom: ... ... ...; - создает границу снизу
4. - border-left: ... ... ...; - создает границу слева

Все эти свойства принимают всё те же значения что и border, но отличаются они тем, что создают границу
на одной конкретной стороне элемента - border-top создат границу сверху, border-left создаст границу слева и т.д.
НО, использовать их надо с одним маааленьким условием (хотя это скорее рекомендация): если есть в коде запись
"border: ... ... ...;" - её надо удалить, так как мы не увидим никаких изменений у границы. border: ; создает
ОБЩУЮ границу, а если мы поверх неё поставим другую то никаких изменений мы не заметим, разве что если рамка
будет намного толще общей, "родительской".
Посмотрим на работу этих свойств:
*/

.example-block {
	border: 0; /* чтобы не мешало, не обращать внимания... */
	border-top: 10px dotted #f00;
}

/*
Зашли в браузер и увидели, что у нашего блока сверху появилась красная граница.
Кстати - текст начал вплотную прилегать к бокам окна браузера, т.к border его уже не смещает, однако он сместился сверху.
Но что делать, если нам надо убрать границу с определенной стороны, но у нас она общая (со всех сторон)?
Для этого мы прописываем свойство border, или же border-left (в зависимости от нужной стороны) и ставим значение 0 (можно none).
*/

.example-block {
	border: 10px solid #000;
	border-left: none;
}

/*
Заходим в браузер и смотрим - слева границы нет, контент слева не прижимается к центру.
НО, текст всё также продолжает "прижиматься" к центру блока справа, т.к граница убрана только слева.

Идем к след. свойству, очень интересному: border-radius: ... ... ... ... (%, px); - устанавливает радиус скругления
уголков блока. Ну допустим, что у нас есть некий квадрат - а мы скруглили его концы (углы), получили круг!
Синтаксис у него схож c синтаксисом margin и padding: border-radius: 1px 1px 1px 1px;, в таком случае границы
нашего блока будут скруглены со ВСЕХ сторон (сверху, справа, снизу и слева), и при этом мы можем задать, какая сторона
будет скруглена больше а какая меньше, и это реально круто!
Посмотрим на его работу:
*/

.example-block {
	border-left: 10px solid #000; /* возвращаем границу */
	border-radius: 10px 10px 10px 10px;
}

/*
Заходим в браузер и смотрим: границы нашего блок немного скруглились, на 10 пикселей.
Но мы можем сократить эту запись! сокращается она также, как и padding с marginom - border-radius: 10px;.
В таком случае ВСЕ границы нашего блока округлятся на 10 пикселей и ничего не изменится.
Доказательства предъявить я не смогу, в CSS файл нельзя вставлять картинки - но вы можете в самом
низу этого файлика создать новое CSS правило и указать там border-radius с этим значением... но мне
всё равно нужно еще больше скруглить, так что.. вот:
*/

.example-block {
	border-radius: 50px;
}

/*
Как не трудно заметить (если зайти в браузер, конечно) границы скруглились еще больше, да так что некоторые
символы аж немного "накрыло" (например буква "c" в левом нижнем углу), но да ладно.
А теперь о том, как скруглить некоторые границы больше (например слева сверху и справа снизу): используем
border в полной форме (также как и padding/margin):
*/

.example-block {
	border-radius: 50px 0px 50px 0px;
}

/*
Заходим в браузер и видим старый логотип Toyota (на самом деле это больше похоже на лимон, честное слово! :D)
А теперь пришла пора удивительных фокусов с border-radius, погнали! -
Это свойство тесно связано со свойством border, но мы можем использовать его БЕЗ родителя (бордера).
Доказательство:
*/

.example-block {
	border: 0;
	overflow: hidden;
}

/*
Вы ничего не увидите, если не присмотритесь.
Достаточно посмотреть на первую строку у блока: "Блочный тег", можно заметить что буква "б" немного стёрта.
Почему? - всё из-за свойства overflow: hidden;, оно "стирает" всё то, что выходит за "границы" блока (буквально СТИРАЕТ),
а так как из-за слишком большого радиуса округления наш текст был немного накрыт (вытеснен) границей, он вылез за
пределы блока и лишнее было стёрто.
А можно вообще сделать "мячик" из текста! вот, сами посмотрите:
*/

.example-block {
	width: 100px;
	height: 100px;
	border-radius: 50%;
}

/*
Рассказывать о том, что произошло - я не буду, так не интересно :)
Лучше уж самому зайти в браузер и посмотреть на то, что вшыло.

Ну на этом всё! остальное допишу завтра, осталось немного :)
*/